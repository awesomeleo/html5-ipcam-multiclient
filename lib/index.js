// Generated by CoffeeScript 1.8.0
(function() {
  var VideoStream, config, runStaticHTMLServer, runWebsocketStreamDataServer, staticServer, streamIdCounter, streams, _;

  VideoStream = require('node-rstp-stream');

  config = require('../config');

  _ = require('underscore');

  streams = config.streams;

  _.each(streams, function(streamConfig) {
    var videoStream;
    console.log("Creating videostream with config:");
    console.log(streamConfig);
    return videoStream = new VideoStream(streamConfig);
  });

  streamIdCounter = 0;

  streams = _.map(streams, function(stream) {
    stream.id = streamIdCounter++;
    return _.omit(stream, 'streamUrl');
  });

  runStaticHTMLServer = function() {
    var file, server, static_;
    static_ = require('node-static');
    file = new static_.Server("./public");
    server = require("http").createServer(function(request, response) {
      request.addListener("end", function() {
        file.serve(request, response);
      }).resume();
    });
    server.listen(80);
    console.log("HTTP server listening on port 80");
    return server;
  };

  staticServer = runStaticHTMLServer();

  runWebsocketStreamDataServer = function() {
    var io;
    io = require('socket.io')(staticServer);
    return io.on('connection', function(socket) {
      console.log("USER CONNECTED");
      return socket.emit('camera metadata', streams);
    });
  };

  runWebsocketStreamDataServer();

}).call(this);
